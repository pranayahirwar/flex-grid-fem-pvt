/* colors - see style guide for docs. 
Clearly there is more you could place in variables, up to you if you want to use them. My
answer does not go beyond colors to keep the code easier to read. */

:root {
    --color1: #001219;
    --color2: #005f73;
    --color3: #3d9397;
    --color4: #94d28d;
    --color5: #e9d8a6;
    --color6: #ee9800;
    --color7: #ca6702;
    --color8: #bb3e03;
    --color9: #ae2012;
    --color10: #9b2226;
}

/*
#################################################
# generic site styles
#################################################
*/

html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

body {
    font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    background-color: #dbe5de;
    padding: 0;
    margin: 0;
}

/*
#################################################
# Mobile View
#################################################


Initial mobile layout: a series of images stacked on top of each other with the figure caption over the image. 

Creating Mobile first design, Because of which css properties defined in mobile view will
be inherited by other media query (view sizes, tablet or desktop).
*/

/*
#################################################
# Header and Nav
#################################################
*/
.header {
    max-width: 1200px;
    margin: 1rem auto;
    padding: 0 1rem;
}

header {
    background-color: var(--color4);
    border-radius: 30px;
    padding: 1rem;
}

header ul {
    margin: 0;
    padding: 0;
    display: flex;
    flex-flow: row wrap;
}

header li:first-child {
    /* logo img take full 100% in 1st row of flexbox layout*/
    flex-basis: 100%;
    /* 
    How & Why adding the below property move my image to middle for Mobile and Tablet View?
    Ans: text-align is a property which works on inline elements (like img, span, a, etc.)
         and inline-block elements. It won't center block-level elements like div or p, unless
         those elements have been turned into inline-block elements.
         
         So, li is an block level element, but because of display:flex in ul, li element
         turned into inline element, because of which we can use text-align property.
    */
    text-align: center;
    margin: 0 auto;
}

header li {
    list-style-type: none;
}

header li a {
    /*By default link are inline element, because of which we have to click over text then
    only we can navigate, but block property helps to expland clickable area of <a> element*/
    display: block;
    text-decoration: none; /*Shorthand property, Helps to remove underline from link */
    color: var(--color1); /*change TEXT Color of Link*/
    font-size: 1.5rem;
}

/* Nav Style for Mobile View */
header li {
    /* Note: Here flex-basis defined again for first element (logo), but we want our logo
    to be 100% in mobile view, but Because of specificity our li element (logo) is still going to be 100% */
    flex-basis: 48%;
}
header li a {
    background-color: var(--color10);
    margin: 0.2rem;
    border-radius: 1rem;
    text-align: center;
    color: white;
}

header li a:hover {
    color: var(--color5);
    background-color: var(--color1);
}

nav li:first-child a {
    /* helps to remove bg color, which is added becaues of this property `header li a` */
    background-color: transparent;
}

/*
#################################################
# Hero Section
#################################################
*/
#hero {
    /* border: 5px solid black; */

    max-width: 100%;
    margin: 0;
    padding: 0;
    background-color: var(--color7);
    text-align: center; /* move img to center of #hero section  */
}
#hero img {
    max-width: 1200px;
    max-height: 454px;
}

/*
#################################################
# Featured-print
#################################################
*/

#featured-print figure {
    border: 10px solid var(--color6);
}

/*
#################################################
# Section
#################################################
*/

section {
    max-width: 1200px;
    /* auto value helps to place section in center */
    margin: 0 auto;
    padding: 0 1rem;
}

section h2 {
    font-size: 2.5rem;
}
section ul {
    /* Helps to remove default indentation of <ul> element */
    margin: 0;
    padding: 0;
}

section li {
    margin-bottom: 1rem; /*Helps to add space between imgs when they are stacked in rows because of flexbox */
    list-style-type: none; /*Helps to remove dots from each list */
}

.color2,
.color2 a:hover {
    border-color: var(--color2);
    color: var(--color2);
}

.color3,
.color3 a:hover {
    border-color: var(--color3);
    color: var(--color3);
}

.color4,
.color4 a:hover {
    border-color: var(--color4);
    color: var(--color4);
}
.color6,
.color6 a:hover {
    border-color: var(--color6);
    color: var(--color6);
}

.color7,
.color7 a:hover {
    /*Why .color a:hover because, we want to target link tag which is inside figure whose border color is color7 */
    border-color: var(--color7);
    color: var(--color7);
}

.color8,
.color8 a:hover {
    border-color: var(--color8);
    color: var(--color8);
}

/*
#################################################
# Mission
#################################################
*/
#mission h1 {
    font-size: 3rem;
}

#mission img {
    max-height: 100px;
    /* max-width: 100px; */
}

figure {
    /*Figure is an element which contain img and figcaption */

    margin: 0; /*Removing default indentation set by figure element and browser */
    padding: 0; /*Removing default indentation set by figure element and browser */
    position: relative; /*This property is used for figcaption, we want figcaption to display over image present inside figure. */
    max-height: 400px; /*helps to avoid long images in mobile view */
    overflow: hidden; /*helps to remove overflow of an images because of max-height property */

    border-left-style: solid; /*helps to create the border effect you are seeing. border-radius is important for this effect */
    border-top-style: solid; /*helps to create the border effect you are seeing. border-radius is important for this effect */

    border-width: 10px;
    border-radius: 35px;
}

figcaption {
    /* tells figcaption to change it's position based on figure, because figure contain position: relative property
    so when figcaption position is absolute, it will look for parent element which contain `position: relative` property
    as in this case, it's just on element above figcaption will position itself according to this parent element other wise
    it will try to position itself according to HTML element*/
    position: absolute;
    bottom: 0;
    background: rgba(255, 255, 255, 0.5); /*Create a white box with some Opacity*/
    width: 100%; /*makes figcaption take full width as of flexbox child container*/
}

figure img {
    width: 100%; /*helps to make our img responsive (It's just an gimmick). helps to take full width of the flexbox child */
    margin-bottom: -4px; /*helps to remove a small white strip in the  */
    /* object-fit: cover; */ /*helps to set img how much zoon in-out we want but we can't be specific*/
}

section a {
    display: block; /*By default link are inline element, because of which we have to click over text then only we can navigate, but block property helps to expland clickable area */
    text-decoration: none; /*It's a shorthand property, Helps to remove underline from link */
    color: var(--color1); /*Helps to change TEXT Color of Link*/
    font-size: 2rem;
    padding-left: 1rem; /*Moves <a> element & It's text little bit right */
}

/*
#################################################
# Popular Prints
#################################################
*/
.popular-prints-bg {
    padding: 0.5rem 0 2rem 0;
    background-color: var(--color2);
    color: white;
}

/*
#################################################
# Footer
#################################################
*/

.footer-color {
    max-width: 1200px;
    margin: 1rem auto;
    padding: 0 1rem;

    /* border: 1px solid blueviolet; */ /*For debuggin*/
}
footer {
    padding: 1rem 1rem;
    background-color: var(--color5);

    /*
  Note: Introducing new div in HTML which wraps footer don't requires to 
  create an border of same color as webpage background color & certain width

  We have to use border with this border property to avoid the bg color which is applying
  all over on
  - content
  - margin
  - border
  which we Are setting up one line above.
  To learn what Actually is happening, remove and reapply to see the changes.
  
  border: 1rem solid #DBE5DE;
  border-radius: 30px;
  */

    /* border: 1px solid red; */ /*For debuggin*/
    border-radius: 30px;

    h4 {
        font-size: 1.5rem;
        margin: 0px 0px 10px 0px;
        padding: 0px 0px 0px 0px;
    }

    address {
        font-weight: 700;
        font-style: normal;
    }
}

footer ul {
    margin: 10px 0;
    padding: 0;
    list-style-type: none;
    display: flex;
    flex-flow: row nowrap;
    gap: 3%;
}

/*
#################################################
# Tablet View
#################################################
*/

@media (min-width: 550px) {
    /*All the properties defined inside will be carried out to media query greater than 550px */

    /*
    #################################################
    # Header & Nav
    #################################################
    */
    header ul {
        justify-content: center;
        /*This gap is created based on Text size of <li> element*/
        gap: 1em;
    }

    header li {
        /* This helps to adpat flexbox items from mobile (2 link row) to tablet view
        (4 link row) */
        flex-basis: auto;
    }

    header li a {
        /*
        Reason behind changing header a to header li a because of specificity
        We are setting up red color bg for link in mobile view, but because our previous
        specificity was low, hence red color is still visible in table and desktop view
        because of which we need to increase the specificity of this css declaration
        */
        color: var(--color1);
        background-color: transparent; /*helps us remove background color which is added in mobile view*/
        margin: 0;
    }

    header li a:hover {
        color: #ffffff;
        background-color: transparent;
    }

    /*
    #################################################
    # Section
    #################################################
    */

    section ul {
        display: flex;
        flex-flow: row wrap;
        gap: 2%;
    }

    section li {
        flex-basis: 49%;
    }

    /*
    #################################################
    # Mission
    #################################################
    */
    .missiontext {
        display: flow-root;

        p {
            line-height: 2;
        }
    }
    #mission img {
        max-height: 200px;

        /* Below two Properties are responsible for making text slant */
        float: left;
        shape-outside: polygon(55% 0, 55% 0, 35% 90%, 50% 0%);
    }

    /*
    #################################################
    # Popular Prints
    #################################################
    */
    #popular-prints li:last-child {
        flex-basis: 100%;
    }

    #popular-prints li:last-child img {
        /* default value of object-fit is fill */
        object-fit: fill;
        object-position: 0px -350px;
    }

    /*
    #################################################
    # Footer
    #################################################
    */
    footer {
        display: flex;
        align-items: center;
        align-items: flex-start;
        gap: 22%;
    }
}

/*
#################################################
# Laptop & Desktop View
#################################################
*/

@media (min-width: 800px) {
    /*
    #################################################
    # Header & Nav
    #################################################
    */
    header ul {
        justify-content: flex-end;
    }

    header li:first-child {
        /* First child is our logo, check HTML */

        /*By default order value is 0*/
        order: 2;
        /*flex-basis default value is auto, we are changing it's values in tablet media 
        query, because of which we need to resize it. So that we can display our logo in 
        middle and distribute space evenly in some single line*/
        flex-basis: auto;
    }

    header li:nth-child(2),
    header li:nth-child(3) {
        order: 1;
    }

    header li:nth-child(4),
    header li:nth-child(5) {
        order: 3;
    }

    /*
    #################################################
    # Section
    #################################################
    */

    section li {
        /*Resize flexbox children boxes to different size. Remember we are Inheriting 
        properties from the above hence we are calculating the percentage value 32% also
        keeping in mind GAP which is 2%*/
        flex-basis: 32%;
    }

    /*
    #################################################
    # Popular Prints
    #################################################
    */
    #popular-prints li:last-child {
        flex-basis: 32%;
    }

    #popular-prints li:last-child img {
        /* resetting these values, which is getting inherited from tablet media query to 
        properly show scooter img*/
        object-fit: initial;
        object-position: initial;
    }

    /*
    #################################################
    # Footer
    #################################################
    */
    footer {
        gap: 16%;
    }
}
